#!/bin/bash

# Author: Samuel Omlin, CSCS (omlins)
#
# Description: Definition of site specific variables and call of JUHPC.
# Site: Piz Daint:gpu, Swiss National Supercomputing Centre (CSCS)
# Base: craype


# Load required modules, including correct CPU and GPU target modules (NOTE: the same modules should be loaded when running julia - JUHPC can be used in a module build recipe...)
module load daint-gpu
module switch PrgEnv-cray PrgEnv-gnu
module load cudatoolkit/11.2.0_3.39-2.1__gf93aa1c craype-accel-nvidia60 # Load latest available cudatoolkit
module load cray-hdf5-parallel
module list


# Environment variables for HPC key packages that require system libraries that require system libraries (MPI.jl, CUDA.jl, AMDGPU.jl, HDF5.jl and ADIOS2.jl)
export JUHPC_CUDA_HOME=$CUDA_HOME
export JUHPC_CUDA_RUNTIME_VERSION=$CRAY_CUDATOOLKIT_VERSION
export JUHPC_MPI_HOME=$MPICH_DIR
export JUHPC_MPI_EXEC="srun -C gpu"
export JUHPC_HDF5_HOME=$HDF5_DIR


# Create site-specific post-install script (currently MPIPreferences does not provide an option to set required preloads if not automatically detected; JUHPC_MPI_VENDOR fails on Piz Daint...)
JUHPC_POST_INSTALL_JL=./post_install.jl
echo 'using Preferences
    set_preferences!("MPIPreferences",
        "preloads" => ["libcuda.so", "libcudart.so"],
        "preloads_env_switch" => "MPICH_RDMA_ENABLED_CUDA";
        force=true
    )' > $JUHPC_POST_INSTALL_JL


# Call JUHPC
JUHPC_SETUP_INSTALLDIR=$SCRATCH/../julia/${HOSTNAME%%[0-9]*}-gpu/juhpc_setup
JULIAUP_INSTALLDIR="\$SCRATCH/../julia/\$USER/\${HOSTNAME%%[0-9]*}-gpu/juliaup"
VERSION="v0.3.0"
wget https://raw.githubusercontent.com/JuliaParallel/JUHPC/$VERSION/juhpc -O ./juhpc
bash -l ./juhpc $JUHPC_SETUP_INSTALLDIR $JULIAUP_INSTALLDIR --postinstall=$JUHPC_POST_INSTALL_JL
