#!/bin/bash

# Author: Samuel Omlin, CSCS (omlins)
#
# Description: Definition of site specific variables and call of JUHPC.
# Site: Piz Daint:gpu, Swiss National Supercomputing Centre (CSCS)
# Base: craype (not using CUDA-aware MPI because system CUDA is outdated as daint is to be decommissioned soon)


# Load required modules, including correct CPU and GPU target modules (NOTE: the same modules should be loaded when running julia - JUHPC can be used in a module build recipe...)
module load daint-gpu
module switch PrgEnv-cray PrgEnv-gnu
module load cray-hdf5-parallel
module list


# Environment variables for HPC key packages that require system libraries that require system libraries (MPI.jl, CUDA.jl, AMDGPU.jl, HDF5.jl and ADIOS2.jl)
export JUHPC_MPI_HOME=$MPICH_DIR
export JUHPC_MPI_EXEC="srun -C gpu"
export JUHPC_HDF5_HOME=$HDF5_DIR

# Create site-specific post-install script (currently MPIPreferences does not provide an option to set required preloads if not automatically detected; JUHPC_MPI_VENDOR fails on Piz Daint...)
JUHPC_POST_INSTALL_JL=./post_install.jl
echo 'using Pkg; Pkg.add("CUDA_Runtime_jll")
    using Preferences
    set_preferences!("CUDA_Runtime_jll",
        "version" => "11.8",
        "local" => false;
        force=true
    )' > $JUHPC_POST_INSTALL_JL # (Set to the highest possible CUDA runtime version that can work on daint using artifacts - "local" is set to false...)


# Call JUHPC
JUHPC_SETUP_INSTALLDIR=$SCRATCH/../julia/${HOSTNAME%%[0-9]*}-gpu-nocudaaware/juhpc_setup
JULIAUP_INSTALLDIR="\$SCRATCH/../julia/\$USER/\${HOSTNAME%%[0-9]*}-gpu-nocudaaware/juliaup"
VERSION="v0.4.0"
wget https://raw.githubusercontent.com/JuliaParallel/JUHPC/$VERSION/juhpc -O ./juhpc
bash -l ./juhpc $JUHPC_SETUP_INSTALLDIR $JULIAUP_INSTALLDIR --postinstall=$JUHPC_POST_INSTALL_JL --verbose=1
